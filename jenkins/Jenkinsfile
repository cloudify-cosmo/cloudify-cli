@Library('pipeline-shared-library') _
pipeline {
  agent {
    kubernetes {
      label 'cli'
      defaultContainer 'jnlp'
      yamlFile 'jenkins/build-pod.yaml'
    }
  }

  options {
    checkoutToSubdirectory('cloudify-cli')
    buildDiscarder(logRotator(numToKeepStr:'10'))
    timeout(time: 60, unit: 'MINUTES')
    timestamps()
  }
  
  environment {
    BRANCH = "${env.BRANCH_NAME}"
    PROJECT = 'cloudify-cli'
    WORKSPACE = "${env.WORKSPACE}"
    PATH = "/root/.local/bin:$PATH"
    VERSION = getVersion("master").trim()
    PRERELEASE = getPreRelease("master").trim()
  }

  stages {
    stage('flake8_py27') {
      steps {
        sh script: "mkdir -p ${env.WORKSPACE}/flake8 && cp -rf ${env.WORKSPACE}/${env.PROJECT}/. ${env.WORKSPACE}/flake8", label: "copying repo to seperate workspace"
        container('py27') {
          dir("${env.WORKSPACE}/flake8") {
            echo 'Install and run flake8'
            sh '''
              pip install flake8 --user
              flake8 cloudify_cli
            '''
          }
        }
      }
    }
    stage('flake8_py36') {
      steps {
        sh script: "mkdir -p ${env.WORKSPACE}/flake8 && cp -rf ${env.WORKSPACE}/${env.PROJECT}/. ${env.WORKSPACE}/flake8", label: "copying repo to seperate workspace"
        container('py36') {
          dir("${env.WORKSPACE}/flake8") {
            echo 'Install and run flake8'
            sh '''
              pip install flake8 --user
              flake8 cloudify_cli
            '''
          }
        }
      }
    }
    stage('build-rpm') {
      steps {
        container('rpmbuild') {
          sh """
            cd && mkdir rpmbuild && cd rpmbuild
            git clone https://github.com/cloudify-cosmo/cloudify-cli.git SOURCES && cd SOURCES
          """
          echo 'Installing setup tools'
          sh '''
            yum install python-setuptools -y
            chmod a+wx /opt
          '''
          dir("~/rpmbuild/SOURCES") {
            echo 'Building dependencies and rpm'
            sh '''
              yum-builddep -y packaging/cloudify-cli.spec
              rpmbuild \
                -D "CLOUDIFY_VERSION $(python setup.py --version | cut -d- -f1)" \
                -D "CLOUDIFY_PACKAGE_RELEASE 1" \
                -bb packaging/cloudify-cli.spec
            '''
          }
          echo 'Copy RPM to RPM folder'
          sh("mkdir -p ${env.WORKSPACE}/rpm && cp -rf /root/rpmbuild/RPMS/x86_64/. ${env.WORKSPACE}/rpm")
        }
      }
    }
  }
}