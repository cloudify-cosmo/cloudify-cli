version: 2.1

checkout:
  post:
    - >
      if [ -n "$CI_PULL_REQUEST" ]; then
        PR_ID=${CI_PULL_REQUEST##*/}
        git fetch origin +refs/pull/$PR_ID/merge:
        git checkout -qf FETCH_HEAD
      fi

executors:
  py27:
    docker:
      - image: circleci/python:2.7

commands:
  install_test_dependencies:
    parameters:
      cache_prefix:
        type: string
        default: py27
    steps:
      - restore_cache:
          keys:
            - << parameters.cache_prefix >>-venv-{{ checksum "dev-requirements.txt" }}-{{ checksum "test-requirements.txt" }}-{{ checksum "setup.py" }}
      - run: ~/venv/bin/pip install -r dev-requirements.txt
      - run: ~/venv/bin/pip install -r test-requirements.txt
      - run: ~/venv/bin/pip install -e .
      - save_cache:
          paths:
            - /home/circleci/venv
          key: << parameters.cache_prefix >>-venv-{{ checksum "dev-requirements.txt" }}-{{ checksum "test-requirements.txt" }}-{{ checksum "setup.py" }}
  pytest:
    steps:
      - run:
          name: pytest
          command: |
            ~/venv/bin/pytest \
              --cov-report term-missing \
              --cov=cloudify_cli \
              cloudify_cli/tests \
              --junitxml=test-results/cloudify_cli.xml

jobs:
  flake8_py27:
    docker:
      - image: circleci/python:2.7
    steps:
      - checkout
      - run: pip install flake8 --user
      - run:
          name: Run flake8
          command: flake8 dsl_parser script_runner cloudify cloudify_rest_client

  test_py27:
    executor:
      py27
    steps:
      - checkout
      - run: virtualenv ~/venv
      - install_test_dependencies
      - pytest
      - store_test_results:
          path: test-results

  py3_compat:
    docker:
      - image: circleci/python:2.7
    steps:
      - checkout
      - run:
          name: install futurize
          command: pip install future --user
      - run:
          name: find python3-incompatible code
          command: |
            FUTURIZE="futurize ."
            while read line; do
              [[ "$line" =~ ^#.* ]] && continue
              FUTURIZE="${FUTURIZE} ${line}"
            done<.circleci/py3fixers
            echo "Running: $FUTURIZE"
            $FUTURIZE>futurize_diffs
      - run:
          name: check that there is no python3-incompatible code
          command: |
            if [[ -s futurize_diffs ]]; then
              echo "Python-3-incompatible code found"
              cat futurize_diffs
              exit 1
            fi

workflows:
  version: 2

  build_and_test:
    jobs: &build_jobs
      - flake8_py27
      - test_py27
      - py3_compat
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs: *build_jobs
