version: 2.1

checkout:
  post:
    - >
      if [ -n "$CI_PULL_REQUEST" ]; then
        PR_ID=${CI_PULL_REQUEST##*/}
        git fetch origin +refs/pull/$PR_ID/merge:
        git checkout -qf FETCH_HEAD
      fi

executors:
  py27:
    docker:
      - image: circleci/python:2.7
  py36:
    docker:
      - image: circleci/python:3.6

commands:
  install_test_dependencies:
    parameters:
      cache_prefix:
        type: string
        default: py27
    steps:
      - restore_cache:
          keys:
            - << parameters.cache_prefix >>-venv-{{ checksum "dev-requirements.txt" }}-{{ checksum "test-requirements.txt" }}-{{ checksum "setup.py" }}
      - run: ~/venv/bin/pip install -r dev-requirements.txt
      - run: ~/venv/bin/pip install -r test-requirements.txt
      - run: ~/venv/bin/pip install -e .
      - save_cache:
          paths:
            - /home/circleci/venv
          key: << parameters.cache_prefix >>-venv-{{ checksum "dev-requirements.txt" }}-{{ checksum "test-requirements.txt" }}-{{ checksum "setup.py" }}
  pytest:
    steps:
      - run:
          name: pytest
          command: |
            ~/venv/bin/pytest \
              --cov-report term-missing \
              --cov=cloudify_cli \
              cloudify_cli/tests \
              --junitxml=test-results/cloudify_cli.xml

jobs:
  flake8_py27:
    executor: py27
    steps:
      - checkout
      - run: pip install flake8 --user
      - run:
          name: Run flake8
          command: flake8 cloudify_cli

  flake8_py36:
    executor: py36
    steps:
      - checkout
      - run: pip install flake8 --user
      - run:
          name: Run flake8
          command: flake8 cloudify_cli

  test_py27:
    executor: py27
    steps:
      - checkout
      - run: virtualenv ~/venv
      - install_test_dependencies
      - pytest
      - store_test_results:
          path: test-results

  test_py36:
    executor: py36
    steps:
      - checkout
      - run: python -m venv ~/venv
      - install_test_dependencies:
          cache_prefix: py36
      - pytest
      - store_test_results:
          path: test-results
  build-deb:
    docker:
      - image: ubuntu:18.04
    steps:
      - checkout
      - run:
          name: Set envvars
          command: |
            echo "export PROJECT_DIR=~/project" >>$BASH_ENV
            echo "export BUILD_DIR=/tmp/build" >>$BASH_ENV
            echo "export RESULT_DIR=/tmp/result" >>$BASH_ENV
            echo "export CLOUDIFY_PACKAGE_RELEASE=1" >>$BASH_ENV
            mkdir /tmp/result
      - run:
          name: Set CLOUDIFY_VERSION
          command: |
            set -ex
            apt-get update
            apt-get install python3 python3-setuptools -y
            echo "export CLOUDIFY_VERSION=$(python3 ~/project/setup.py --version)" >>$BASH_ENV
      - run:
          name: build the deb package
          command: /bin/bash ~/project/packaging/debian/build.sh
      - run:
          name: sanity-test the deb package
          command: |
            set -ex
            rm -rf /opt/cfy
            dpkg -i /tmp/result/*.deb
            cfy --version
      - store_artifacts:
          path: /tmp/result
          destination: /

  build-rpm:
    docker:
      - image: rpmbuild/centos7
    working_directory: ~/rpm
    steps:
      - checkout
      - run: sudo yum install python-setuptools -y
      - run: sudo chmod a+wx /opt
      - run:
          name: Installing build dependencies
          command: sudo yum-builddep -y packaging/cloudify-cli.spec
      - run:
          name: Building rpm
          command: |
            rpmbuild \
              -D "CLOUDIFY_VERSION $(python setup.py --version | cut -d- -f1)" \
              -D "CLOUDIFY_PACKAGE_RELEASE 1" \
              -bb packaging/cloudify-cli.spec
      - run: |
          mkdir result
          mv x86_64/*.rpm result
      - store_artifacts:
          path: result
          destination: result

workflows:
  version: 2

  build_and_test:
    jobs: &build_jobs
      - build-rpm
      - flake8_py27
      - test_py27:
          requires:
            - flake8_py27
      - flake8_py36
      - test_py36:
          requires:
            - flake8_py36
      - build-deb
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs: *build_jobs
