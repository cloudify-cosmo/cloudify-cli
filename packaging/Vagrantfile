########
# Copyright (c) 2014 GigaSpaces Technologies Ltd. All rights reserved
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
#    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    * See the License for the specific language governing permissions and
#    * limitations under the License.

# -*- mode: ruby -*-
# vi: set ft=ruby :

AWS_ACCESS_KEY_ID = ENV['AWS_ACCESS_KEY_ID']
AWS_ACCESS_KEY = ENV['AWS_ACCESS_KEY']
AWS_ACCESS_KEY_ID_UPLOAD_TEMP = ENV['AWS_ACCESS_KEY_ID_UPLOAD_TEMP']
AWS_ACCESS_KEY_UPLOAD_TEMP = ENV['AWS_ACCESS_KEY_UPLOAD_TEMP']

GITHUB_USERNAME = ENV['GITHUB_USERNAME']
GITHUB_PASSWORD = ENV['GITHUB_PASSWORD']
CLI_BRANCH = ENV['tag']
PACKAGER_BRANCH = ENV['PACKAGER_BRANCH']
REPO = ENV['REPO']

Vagrant.configure('2') do |config|
  config.vm.define "centos65x64" do |centos65x64|
    #dummy box, will be overriden
    centos65x64.vm.box = "dummy"
    centos65x64.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"
    centos65x64.vm.provider :aws do |aws, override|
      aws.access_key_id = AWS_ACCESS_KEY_ID
      aws.secret_access_key = AWS_ACCESS_KEY
      # official centos6.5 64bit with omnibus installed
      aws.ami = "ami-654cc016"
      aws.region = "eu-west-1"
      aws.instance_type = "m3.large"
      aws.keypair_name = "vagrant_build"
      override.ssh.username = "root"
      override.ssh.private_key_path = "~/.ssh/aws/vagrant_build.pem"
      override.nfs.functional = false
      aws.tags = { "Name" => "vagrant cli centos 6.5x64 build" }
      aws.security_groups = "vagrant_linux_build"
    end
    centos65x64.vm.provision "shell" do |s|
      s.path = "linux/provision.sh"
      s.args = "#{GITHUB_USERNAME} #{GITHUB_PASSWORD} #{AWS_ACCESS_KEY_ID_UPLOAD_TEMP} #{AWS_ACCESS_KEY_UPLOAD_TEMP} #{CLI_BRANCH} #{PACKAGER_BRANCH} #{REPO}"
      s.privileged = false
    end
  end

  config.vm.define "debian_wheezy_x64" do |debian_wheezy_x64|
    #dummy box, will be overriden
    debian_wheezy_x64.vm.box = "dummy"
    debian_wheezy_x64.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"
    debian_wheezy_x64.vm.provider :aws do |aws, override|
      aws.access_key_id = AWS_ACCESS_KEY_ID
      aws.secret_access_key = AWS_ACCESS_KEY
      # official debian wheezy 64bit with omnibus installed
      aws.ami = "ami-a24ec2d1"
      aws.region = "eu-west-1"
      aws.instance_type = "m3.large"
      aws.keypair_name = "vagrant_build"
      override.ssh.username = "admin"
      override.ssh.private_key_path = "~/.ssh/aws/vagrant_build.pem"
      override.nfs.functional = false
      aws.tags = { "Name" => "vagrant cli debian_wheezy_x64 build" }
      aws.security_groups = "vagrant_linux_build"
    end
    debian_wheezy_x64.vm.provision "shell" do |s|
      s.path = "linux/provision.sh"
      s.args = "#{GITHUB_USERNAME} #{GITHUB_PASSWORD} #{AWS_ACCESS_KEY_ID_UPLOAD_TEMP} #{AWS_ACCESS_KEY_UPLOAD_TEMP} #{CLI_BRANCH} #{PACKAGER_BRANCH} #{REPO}"
      s.privileged = false
    end
  end

  config.vm.define "windows_cli" do |windows|
    windows.vm.box = "dummy"
    windows.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"
    windows.vm.guest = :windows
    windows.vm.provider :aws do |aws, override|
      aws.access_key_id = AWS_ACCESS_KEY_ID
      aws.secret_access_key = AWS_ACCESS_KEY
      # this a pre-baked AMI, not pure base image
      aws.ami = "ami-05662176"
      aws.region = "eu-west-1"
      aws.instance_type = "m3.large"
      aws.keypair_name = "vagrant_build"
      override.ssh.username = "Administrator"
      override.ssh.private_key_path = "~/.ssh/aws/vagrant_build.pem"
      override.nfs.functional = false
      aws.tags = { "Name" => "vagrant windows cli build" }
      aws.security_groups = "vagrant_windows"
    end
    windows.vm.synced_folder ".", "/vagrant", disabled: true
    windows.vm.synced_folder "./windows/packaging", "/home/Administrator/packaging"
    # shell provisioning uses bash, so use cmd to run batch script
    windows.vm.provision "shell" do |shell|
      shell.path = 'windows/provision.sh'
      shell.args = "#{GITHUB_USERNAME} #{GITHUB_PASSWORD} #{AWS_ACCESS_KEY_ID_UPLOAD_TEMP} #{AWS_ACCESS_KEY_UPLOAD_TEMP} #{REPO}"
      shell.privileged = false
    end
  end
end
