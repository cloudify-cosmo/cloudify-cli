########
# Copyright (c) 2014 GigaSpaces Technologies Ltd. All rights reserved
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
#    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    * See the License for the specific language governing permissions and
#    * limitations under the License.

# -*- mode: ruby -*-
# vi: set ft=ruby :

GITHUB_USERNAME = ENV['GITHUB_USERNAME']
GITHUB_PASSWORD = ENV['GITHUB_PASSWORD']
AWS_ACCESS_KEY_ID = ENV['AWS_ACCESS_KEY_ID']
AWS_ACCESS_KEY = ENV['AWS_ACCESS_KEY']

CENTOS_FINAL_BOX_NAME = 'chef/centos-6.5'

Vagrant.configure('2') do |config|
  config.vm.define "centos_core_cli_aws" do |centos_final|
    #dummy box, will be overriden
    centos_final.vm.box = "dummy"
    centos_final.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"

    centos_final.vm.provider :aws do |aws, override|
      aws.access_key_id = AWS_ACCESS_KEY_ID
      aws.secret_access_key = AWS_ACCESS_KEY

      # unofficial centos6.4 64bit box
      aws.ami = "ami-fd69068a"
      aws.region = "eu-west-1"
      aws.instance_type = "m3.medium"

      aws.keypair_name = "vagrant_build"
      override.ssh.username = "ec2-user"
      override.ssh.private_key_path = "~/.ssh/aws/vagrant_build.pem"

      aws.tags = {
          "Name" => "vagrant agent centos 7.0 build",
      }
        aws.security_groups = "vagrant_linux_build"
    end

    #need to sync folders
    centos_final.vm.synced_folder "../", "/cloudify-cli", create: true, type: "rsync", rsync__exclude: ".git/"
    centos_final.vm.provision "shell" do |s|
      s.path = "linux/build.sh"
      s.args = "#{GITHUB_USERNAME} #{GITHUB_PASSWORD}"
      s.privileged = false
    end
  end
  config.vm.define "centos_final_cli_aws" do |centos_final|
    #dummy box, will be overriden
    centos_final.vm.box = "dummy"
    centos_final.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"

    centos_final.vm.provider :aws do |aws, override|
      aws.access_key_id = AWS_ACCESS_KEY_ID
      aws.secret_access_key = AWS_ACCESS_KEY

      # unofficial centos6.5 64bit
      aws.ami = "ami-77385400"
      aws.region = "eu-west-1"
      aws.instance_type = "m3.medium"

      aws.keypair_name = "vagrant_build"
      override.ssh.username = "root"
      override.ssh.private_key_path = "~/.ssh/aws/vagrant_build.pem"

      aws.tags = {
          "Name" => "vagrant agent centos 6.5 build",
      }
        aws.security_groups = "vagrant_linux_build"
    end

    #need to sync folders
    centos_final.vm.synced_folder "../", "/cloudify-cli", create: true, type: "rsync", rsync__exclude: ".git/"
    centos_final.vm.provision "shell" do |s|
      s.path = "linux/build.sh"
      s.args = "#{GITHUB_USERNAME} #{GITHUB_PASSWORD}"
      s.privileged = false
    end
  end
  config.vm.define "windows_aws" do |windows|
    windows.vm.box = "dummy"
    windows.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"
    windows.vm.guest = :windows

    windows.vm.provider :aws do |aws, override|
      aws.access_key_id = AWS_ACCESS_KEY_ID
      aws.secret_access_key = AWS_ACCESS_KEY

      # this a pre-baked AMI, not pure base image
      aws.ami = "ami-118ee566"
      aws.region = "eu-west-1"
      aws.instance_type = "m3.medium"

      aws.keypair_name = "vagrant_build"
      override.ssh.username = "Administrator"
      override.ssh.private_key_path = "~/.ssh/aws/vagrant_build.pem"

      aws.tags = {
          "Name" => "vagrant windows cli build",
      }
      aws.security_groups = "vagrant_windows"
    end

    windows.vm.synced_folder ".", "/vagrant", disabled: true
    windows.vm.synced_folder "./windows/packaging", "/home/Administrator/packaging"

    # shell provisioning uses bash, so use cmd to run batch script
    windows.vm.provision "shell" do |shell|
      shell.path = 'windows/provision.sh'
      shell.privileged = false
    end
  end

  config.vm.define :centos_final_cli do |local|
    local.vm.provider :virtualbox do |vb|
      vb.customize ['modifyvm', :id, '--memory', '1024']
    end
    local.vm.box = CENTOS_FINAL_BOX_NAME
    local.vm.hostname = 'local'
    local.vm.synced_folder "../", "/cloudify-cli", create: true
    local.vm.provision "shell" do |s|
      s.path = "linux/build.sh"
      s.args = "#{GITHUB_USERNAME} #{GITHUB_PASSWORD}"
      s.privileged = false
    end
  end
end
